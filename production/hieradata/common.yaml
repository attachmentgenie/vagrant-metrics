---
classes:
 - roles::metrics
profiles::carbon::carbon_caches:
  a:
    line_receiver_port: 2103
    cache_query_port: 7102
    pickle_receiver_port: 2104
  b:
    line_receiver_port: 2203
    cache_query_port: 7202
    pickle_receiver_port: 2204
  c:
    line_receiver_port: 2303
    cache_query_port: 7302
    pickle_receiver_port: 2304
profiles::collectd::manage_repo: true
profiles::collectd::plugins:
  'collectd::plugin::cpu':
     reportbystate: true
     reportbycpu: true
     valuespercentage: true
  'collectd::plugin::disk':
    disks:
      - 'sda'
    manage_package: false
  'collectd::plugin::memory': {}
  'collectd::plugin::tcpconns':
    listening: true
  'collectd::plugin::uptime': {}
  'collectd::plugin::write_graphite':
    carbons:
     'c':
        graphitehost: 'c.metrics.vagrant'
     'classic':
        graphitehost: 'classic.metrics.vagrant'
     'influxdb':
        graphitehost: 'influxdb.metrics.vagrant'
     'ng':
        graphitehost: 'ng.metrics.vagrant'
    carbon_defaults:
      graphiteport: 2003
      graphiteprefix: 'collectd.'
      protocol: tcp
profiles::firewall::ensure: stopped
profiles::grafana::datasources:
  classic:
    is_default: true
    type: graphite
    url: 'http://classic.metrics.vagrant'
    access_mode: proxy
  c:
    type: graphite
    url: 'http://c.metrics.vagrant'
    access_mode: proxy
  influxdb:
    type: influxdb
    url: 'http://influxdb.metrics.vagrant:8086'
    access_mode: proxy
    database: graphite
  ng:
    type: graphite
    url: 'http://ng.metrics.vagrant'
    access_mode: proxy
  prometheus:
    type: prometheus
    url: 'http://prometheus.metrics.vagrant'
    access_mode: proxy
profiles::graphite_web::carbon_caches:
  a:
    line_receiver_port: 2103
    cache_query_port: 7102
    pickle_receiver_port: 2104
  b:
    line_receiver_port: 2203
    cache_query_port: 7202
    pickle_receiver_port: 2204
  c:
    line_receiver_port: 2303
    cache_query_port: 7302
    pickle_receiver_port: 2304
profiles::postgresql::databases:
  graphite:
    user: graphite
    password: secret
    grant: all
profiles::postgresql::manage_repo: true
profiles::prometheus::scrape_configs:
  - job_name: prometheus
    scrape_interval: 30s
    scrape_timeout: 30s
    static_configs:
    - targets:
        - prometheus.metrics.vagrant:9090
  - job_name: node_exporter
    scrape_interval: 30s
    scrape_timeout: 30s
    static_configs:
    - targets:
        - c.metrics.vagrant:9100
        - classic.metrics.vagrant:9100
        - grafana.metrics.vagrant:9100
        - influxdb.metrics.vagrant:9100
        - ng.metrics.vagrant:9100
        - node1.metrics.vagrant:9100
        - prometheus.metrics.vagrant:9100
profiles::statsd::install_method: 'npm'
profiles::uwsgi::apps:
  graphite:
    ensure: 'present'
    gid: 'graphite-web'
    uid: 'graphite-web'
    application_options:
      plugins-dir: '/usr/lib64/uwsgi'
      processes: 2
      plugin: 'python'
      pymodule-alias: graphite.local_settings=/etc/graphite-web/local_settings.py
      socket: '127.0.0.1:3333'
      wsgi-file: '/usr/share/graphite/graphite-web.wsgi'
profiles::uwsgi::plugins:
  - 'uwsgi-plugin-python'
profiles::bootstrap::firewall: true
profiles::metrics::prometheus: true
profiles::monitoring::collectd: true
